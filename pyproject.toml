[project]
name = "sports-planner"
dynamic = ["version"]
readme = "README.md"
dependencies = ["sports-planner-lib", "PyGObject", "profilehooks", "plotly", "plotly-gtk", "libantplus", "numpy", "pyYAML", "icalendar"]

[build-system]
requires = [
    "meson-python",
    "setuptools>=64",
    "setuptools_scm>=8",
    "setuptools_scm_custom",
    "sphinx",
    "sphinx-pyreverse",
    "pydata-sphinx-theme",
    "rstxml2docbook@git+https://github.com/slaclau/rstxml2docbook"
]
build-backend = "mesonpy"

[tool.meson-python.args]
install = ['--wheel']

[project.optional-dependencies]
tbr = ["sweat", "sqlalchemy"]
test = []
lint = ["black", "isort", "flake8", "flake8-pyproject", "flake8-pylint", "flake8-json", "flake8-bugbear", "mypy", "mypy-json-report", "deptry", "pygobject-stubs"]
doc = ["sphinx", "sphinx-pyreverse", "pydata-sphinx-theme", "rstxml2docbook@git+https://github.com/slaclau/rstxml2docbook"]
dev = ["sports-planner[doc, lint, test]"]

[project.scripts]
ant-trainer = "sports_planner.gui.training.main:standalone"
activity-viewer = "sports_planner.gui.activities.viewer:standalone"
sports-planner = "sports_planner.main:main"

[tool.setuptools_scm]
version_scheme = "setuptools_scm_custom:custom"
local_scheme = "setuptools_scm_custom:custom_local"
version_file = "src/sports_planner/_version.py"

[tool.setuptools_scm_custom]
version_scheme = "[{tag}?{distance}==0:{next_tag}][.dev{distance}?{distance}>0]"
local_scheme = "[+{node}?{distance}>0][[+?{distance}==0:.]d{node_date}?{dirty}==True]"

[tool.mypy]
# Disallow dynamic typing
disallow_any_unimported = true
# disallow_any_expr = true
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_explicit = true
disallow_subclassing_any = true

# Disallow untyped definitions and calls
# disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

# None and optional handling
no_implicit_optional = true

# Configuring warnings
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_redundant_casts = true

# Misc things
strict_equality = true

# Config file
warn_unused_configs = true

[tool.isort]
profile = "black"

[tool.pylint.MAIN]
load-plugins = [
    "pylint.extensions.docparams"
]

[tool.pylint.MESSAGES-CONTROL]
enable = [
    "missing-function-docstring"
]
disable = [
    "invalid-name",
    "logging-fstring-interpolation"
]
extension-pkg-allow-list = [
]

[tool.pylint.parameter_documentation]
accept-no-param-doc = false
accept-no-raise-doc = false
accept-no-return-doc = false
accept-no-yields-doc = false
# Possible choices: ['sphinx', 'epytext', 'google', 'numpy', 'default']
default-docstring-type = "numpy"

[tool.flake8]
max-line-length = 88
max-doc-length = 88
docstring-convention = "numpy"
extend-select = [
    "D417",
]
extend-ignore = [
    "D102",
]
extend-exclude = [
]
require-plugins = [
#    "flake8-pydocstyle",
    "flake8-pylint",
    "flake8-json",
    "flake8-bugbear",
]
docstring_style = "numpy"

[tool.deptry]
pep621_dev_dependency_groups = ["doc", "lint", "test", "dev"]

[tool.commitizen]
name = "cz-trailers"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "scm"
major_version_zero = true